
/* Апплет, иллюстрирующий обмен данными с помощью каналов ввода-
* вывода. Апплет производит рисование залпов фейерверка.
* Рисованием фейерверка занимается объект-поток типа
* ZalpThr. Другой поток (типа ColorThr) случайным образом
* генерирует цвет очередной серии залпов.

* Для передачи сгенерированного цвета в объект-поток рисования
* фейерверка используются канальные потоки ввода-вывода,
* которые создаются в объекте-апплете.
*/

import java.awt.*;
        import java.applet.*;
        import java.io.*;

// апплет для рисования фейерверка
public class Zalp extends Applet
{

    // канальный поток ввода (для чтения сгенерированного цвета)
    PipedInputStream in=null;
    // канальный поток вывода (для передачи сгенерированного цвета)
    PipedOutputStream out=null;

    public void init()
    {
        // создание канальных потоков ввода-вывода
        try
        {
            in = new PipedInputStream();
            // поток вывода создается на основе потока ввода
            // для организации коммуникационного канала
            // между ними
            out = new PipedOutputStream(in);
        }
        catch(IOException ex)
        {
        }
        setBackground(Color.black);
        // создание потока рисования фейерверка,
        // в качестве параметров конструктора передаются
        // поток ввода для получения цвета рисования и
        // графический контекст апплета
        new ZalpThr(in,getGraphics()).start();
        // создание потока генерации цвета фейерверка,
        // в качестве параметров конструктора передается
        // поток вывода для передачи цвета
        new ColorThr(out).start();
    }
}